{"version":3,"sources":["webpack:///./src/app/components/form-register/form-register.component.html","webpack:///./src/app/components/form-register/form-register.component.ts","webpack:///./src/app/routes/register-page/module.ts","webpack:///./src/app/routes/register-page/register-page.component.html","webpack:///./src/app/routes/register-page/register-page.component.ts","webpack:///./src/app/routes/register-page/router.ts"],"names":[],"mappings":"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","file":"routes-register-page-module.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"formData\\\" (submit)=\\\"submitForm()\\\">\\n  \\n    <label for=\\\"last_name\\\">nom</label>\\n    <input type=\\\"text\\\" name=\\\"last_name\\\" id=last_name required minlength=\\\"2\\\" formControlName=\\\"last_name\\\">\\n  \\n    <label for=\\\"first_name\\\">pr√©nom</label>\\n    <input type=\\\"text\\\" name=\\\"first_name\\\" id=first_name required minlength=\\\"2\\\" formControlName=\\\"first_name\\\">\\n  \\n    <label for=\\\"email\\\">email</label>\\n    <input type=\\\"email\\\" name=\\\"email\\\" id=email required minlength=\\\"2\\\" formControlName=\\\"email\\\">\\n  \\n    <label for=\\\"password\\\">Mot de passe</label>\\n    <input type=\\\"password\\\" name=\\\"password\\\" id=password required minlength=\\\"2\\\" formControlName=\\\"password\\\">\\n  \\n    <label for=\\\"password_repeate\\\">Repeter le Mot de passe</label>\\n    <input type=\\\"password\\\" name=\\\"password_repeate\\\" id=password_repeate required minlength=\\\"2\\\" formControlName=\\\"password_repeate\\\">\\n\\n    <label for=\\\"street\\\">Adresse</label>\\n    <input type=\\\"text\\\" name=\\\"street\\\" id=street required minlength=\\\"2\\\" formControlName=\\\"street\\\">\\n    \\n    <label for=\\\"country\\\">Ville</label>\\n    <input type=\\\"text\\\" name=\\\"country\\\" id=country required minlength=\\\"2\\\" formControlName=\\\"country\\\">\\n    \\n    <label for=\\\"zip_code\\\">Code postal</label>\\n    <input type=\\\"text\\\" name=\\\"zip_code\\\" id=zip_code required minlength=\\\"2\\\" formControlName=\\\"zip_code\\\">\\n    \\n    <label for=\\\"birthdate\\\">date de naissance</label>\\n    <input type=\\\"text\\\" name=\\\"birthdate\\\" id=birthdate required minlength=\\\"2\\\" formControlName=\\\"birthdate\\\">\\n\\n    <label for=\\\"type\\\">type</label>\\n    <select name=\\\"type\\\" id=\\\"type\\\" formControlName=\\\"type\\\">\\n      <option *ngFor=\\\"let item of ['merchant', 'neighborhood', 'admin']\\\" [value]=\\\"item\\\">{{item}}</option>\\n    </select>\\n\\n    <p><input type=\\\"checkbox\\\" required formControlName=\\\"cgu\\\" name=\\\"cgu\\\">Accepter les CGU</p>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!formData.valid\\\">Inscription</button>\\n  </form>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-form-register',\n  templateUrl: './form-register.component.html',\n  styles: []\n})\nexport class FormRegisterComponent implements OnInit {\n\n  public formData: FormGroup;\n\n  @Output() formSubmit = new EventEmitter();\n\n  constructor(\n    private FormBuilder: FormBuilder\n  ) {}\n\n  private resetForm = () => {\n    this.formData = this.FormBuilder.group({\n      first_name: ['corentin', Validators.required],\n      last_name: ['croizat', Validators.required],\n      email: ['corentin@hetic.net', Validators.required],\n      password: ['123456', Validators.required],\n      password_repeate: ['123456', Validators.required],\n      street: ['1 rue toto', Validators.required],\n      city: ['toto', Validators.required],\n      zip_code: ['91130', Validators.required],\n      country: ['France', Validators.required],\n      birthdate: ['25/11/1995', Validators.required],\n      position: ['NULL', Validators.required],\n      type: ['admin', Validators.required],\n      cgu: [true, Validators.required]\n    })\n  }\n\n  public submitForm = () => {\n    if (this.formData.value.password === this.formData.value.password_repeate) {\n      this.formSubmit.emit(this.formData.value)\n    }\n  }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n}\n","/* \r\nImports \r\n*/\r\n    // Angular\r\n    import { NgModule } from '@angular/core';\r\n    import { CommonModule } from '@angular/common';\r\n    import { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\n    // Inner\r\n    import { RegisterPageComponent } from './register-page.component';\r\n    import { Routing } from \"./router\";\r\n    import { FormRegisterComponent } from \"../../components/form-register/form-register.component\";\r\n//\r\n\r\n\r\n/* \r\nDefinition \r\n*/\r\n    @NgModule({\r\n        declarations: [ RegisterPageComponent, FormRegisterComponent ],\r\n        imports: [ \r\n            CommonModule, \r\n            FormsModule,\r\n            ReactiveFormsModule,\r\n\r\n            // Ajouter le router dans la tableau des imports\r\n            Routing\r\n        ]\r\n    })\r\n//\r\n\r\n\r\n/* \r\nExport \r\n*/\r\n    export class Module {};\r\n//","module.exports = \"<app-form-register\\r\\n    (formSubmit)=\\\"registerUser($event)\\\"\\r\\n></app-form-register>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../services/auth/auth.service\";\nimport { UserModel } from \"../../models/user.model\";\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styles: []\n})\nexport class RegisterPageComponent implements OnInit {\n\n  constructor(\n    private AuthService: AuthService\n  ) { }\n\n  private registerUser = ( userdata: UserModel ) => {\n    this.AuthService.register(userdata)\n    .then( apiResponse => console.log(apiResponse) )\n    .catch( apiResponse => console.error(apiResponse) )\n  }\n\n  ngOnInit() {\n  }\n\n}\n","/* \r\nImports \r\n*/\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterPageComponent } from './register-page.component';\r\n//\r\n\r\n\r\n/* \r\nDefinition \r\n*/\r\nconst route: Routes = [\r\n    {\r\n        path: '',\r\n        component: RegisterPageComponent\r\n    }\r\n];\r\n//\r\n\r\n\r\n/* \r\nExport \r\n*/\r\nexport const Routing: ModuleWithProviders = RouterModule.forChild(route);\r\n//"],"sourceRoot":""}